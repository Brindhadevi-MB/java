import java.util.Scanner;

class Node {
    int val;
    Node next;

    Node(int d) {
        val = d;
        next = null;
    }
}

class LinkedList {
    Node head, tail;

    void push(Node new_node) {
        if (head == null && tail == null) {
            head = tail = new_node;
            return;
        }
        tail.next = new_node;
        tail = new_node;
    }

    void printList() {
        Node temp = head;
        while (temp != null) {
            System.out.print(temp.val + " ");
            temp = temp.next;
        }
        System.out.println();
    }
}

class Solution {
    public Node sortBinaryList(Node head) {
        int count0=0;
        int count1=0;
        Node temp=head;
        while(temp!=null){
            if(temp.val==0)
            {
            count0++;
            }
            else
            { 
               count1++; 
            }
            temp=temp.next;
        }
    
    temp=head;
    while(count0>0){
        temp.val=0;
        temp=temp.next;
        count0--;
    }
    while(count1>1){
        temp.val=1;
        temp=temp.next;
        count1--;
    }
    return head;
}
}

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        LinkedList llist = new LinkedList();
        for (int i = 0; i < n; i++) {
            int data = sc.nextInt();
            llist.push(new Node(data));
        }
        Solution obj = new Solution();
        Node sortedHead = obj.sortBinaryList(llist.head);
        llist.head = sortedHead;
        llist.printList();
        sc.close();
    }
}
